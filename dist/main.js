(()=>{"use strict";var e={904:(e,n,t)=>{t.d(n,{c:()=>A});var r=t(648),a=t.n(r),o=t(312),d=t.n(o)()(a());d.push([e.id,":root {\n    --primary-color: #05386B;\n    --secondary-color: #5CDB95;\n    --add-color: #aaffaa;\n    --add-border: #99dd99;\n    --cancel-color: #ffbebe;\n    --cancel-border: #eeadad;\n    --darkhover-color: #395979;\n    --lighthover-color: #ddd;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n    font-family: sans-serif;\n}\n\nh2 {\n    color: var(--secondary-color);\n    font-size: 1.7em;\n    \n}\n\n#page-container {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto 1fr;\n    height: 100%;\n    \n}\n\n#header {\n    grid-column: 1 / 3;\n    background-color: #5CDB95;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    padding: 25px;\n}\n\n#header > img {\n    height: 50px;\n    width: 50px;\n}\n\n#header > p {\n    font-size: 2em;\n    color: var(--primary-color);\n    font-weight: 600;\n}\n\n#content-container {\n    grid-column: 1 / 3;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: auto auto 1fr;\n    \n    \n}\n\n#sidebar-one , #sidebar-two {\n    grid-column: 1 / 2;\n    background-color: var(--primary-color);\n    padding: 15px 25px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px; \n     \n}\n\n#content-container > h2 {\n    background-color: var(--primary-color);\n    padding: 0 25px;\n    display: grid;\n}\n\n.side-image {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n    \n}\n\n#project-container > .side-image {\n    justify-content: space-between;\n}\n\n\n.side-image > img , .project-name-container > img {\n    height: 20px;\n    width: 20px;\n}\n\n.side-image > p , .project-name-container > p {\n    color: var(--secondary-color);\n    font-size: 16px;\n    \n}\n.side-image , .addproject-btn {\n    padding: 10px 18px;\n}\n.side-image {\n    background-color: var(--primary-color);\n    border: none;\n    border-radius: 5px;\n}\n\n.project-name-container {\n    display: flex;\n    gap: 10px;\n}\n\nbutton > img {\n    height: 10px;\n    width: 10px;\n}\n\n#General:hover , #Today:hover , #Weekly:hover , .addproject-btn:hover , .side-image:hover , .side-image:hover > * {\n    background-color: #395979;\n    cursor: pointer;\n\n}\n\n#main-content {\n    grid-column: 2 / 3;\n    grid-row: 1 / 4;\n    grid-template-rows: 1fr;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 30px;\n    padding: 20px 40px;\n    \n}\n\n#main-header > h2 {\n    color: var(--primary-color);\n}\n\n#main-body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n    width: 80%;\n}\n\n#main-body > .task {\n    width: 100%;\n    \n}\n\n#project-container {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.addtask-btn  {\n    background-color: white;\n    border: none;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    gap: 15px;\n    border-radius: 5px;\n    padding: 10px 18px;\n}\n\n.addproject-btn {\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n    border: none;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n    border-radius: 5px;\n}\n\n.addproject-btn > p {\n    font-size: 16px;\n}\n\n.addtask-btn:hover , .task-holder:hover , .task-holder:hover > * {\n    background-color: var(--lighthover-color);\n    cursor: pointer;\n}\n\n.addtask-btn > img , .addproject-btn > img {\n    height: 20px;\n    width: 20px;\n}\n\n.addproject-popup {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n}\n\n.project-addcancel-btns {\n    display: flex;\n    gap: 15px;\n}\n\ninput {\n    width: 100%;\n    padding: 10px;\n    border-radius: 5px;\n    box-sizing: border-box;\n    border: 1px solid #395979;\n    \n}\n\n.addproject-popup > input:focus {\n    outline: none;\n}\n\n.project-add-btn , .project-cancel-btn {\n    width: 100%;\n    font-weight: bold;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n\n}\n\n.project-add-btn {\n    background-color: var(--add-color);\n    border: none;\n}\n\n.project-cancel-btn {\n    background-color: var(--cancel-color);\n    border: 1px solid var(--cancel-border);\n}\n\n.project-name {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n\n}\n\n\n\n#task-container {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    \n    \n    \n\n}\n\n\n\n.task-holder {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 18px;\n    box-sizing: border-box;\n    border-radius: 5px;\n    \n}\n\n.task {\n    width: 100%;\n    border-radius: 5px;\n    font-weight: bold;\n}\n\n.task-button-holder {\n    display: flex;\n    width: 100%;\n    \n    \n}\n\n\n\n.delete-button {\n    background-color: var(--primary-color);\n    border: none;\n    display: none;\n}\n\n\n\n.inactive {\n    display: none;\n    \n}\n\n.active , .active > * {\n    background-color: var(--darkhover-color);\n}\n\n.side-image:hover > .delete-button , .task-holder:hover > .delete-button {\n    display: inline-block;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\r\n    --primary-color: #05386B;\r\n    --secondary-color: #5CDB95;\r\n    --add-color: #aaffaa;\r\n    --add-border: #99dd99;\r\n    --cancel-color: #ffbebe;\r\n    --cancel-border: #eeadad;\r\n    --darkhover-color: #395979;\r\n    --lighthover-color: #ddd;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-family: sans-serif;\r\n}\r\n\r\nh2 {\r\n    color: var(--secondary-color);\r\n    font-size: 1.7em;\r\n    \r\n}\r\n\r\n#page-container {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto 1fr;\r\n    height: 100%;\r\n    \r\n}\r\n\r\n#header {\r\n    grid-column: 1 / 3;\r\n    background-color: #5CDB95;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    padding: 25px;\r\n}\r\n\r\n#header > img {\r\n    height: 50px;\r\n    width: 50px;\r\n}\r\n\r\n#header > p {\r\n    font-size: 2em;\r\n    color: var(--primary-color);\r\n    font-weight: 600;\r\n}\r\n\r\n#content-container {\r\n    grid-column: 1 / 3;\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    grid-template-rows: auto auto 1fr;\r\n    \r\n    \r\n}\r\n\r\n#sidebar-one , #sidebar-two {\r\n    grid-column: 1 / 2;\r\n    background-color: var(--primary-color);\r\n    padding: 15px 25px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px; \r\n     \r\n}\r\n\r\n#content-container > h2 {\r\n    background-color: var(--primary-color);\r\n    padding: 0 25px;\r\n    display: grid;\r\n}\r\n\r\n.side-image {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    width: 100%;\r\n    \r\n}\r\n\r\n#project-container > .side-image {\r\n    justify-content: space-between;\r\n}\r\n\r\n\r\n.side-image > img , .project-name-container > img {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n.side-image > p , .project-name-container > p {\r\n    color: var(--secondary-color);\r\n    font-size: 16px;\r\n    \r\n}\r\n.side-image , .addproject-btn {\r\n    padding: 10px 18px;\r\n}\r\n.side-image {\r\n    background-color: var(--primary-color);\r\n    border: none;\r\n    border-radius: 5px;\r\n}\r\n\r\n.project-name-container {\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n\r\nbutton > img {\r\n    height: 10px;\r\n    width: 10px;\r\n}\r\n\r\n#General:hover , #Today:hover , #Weekly:hover , .addproject-btn:hover , .side-image:hover , .side-image:hover > * {\r\n    background-color: #395979;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n#main-content {\r\n    grid-column: 2 / 3;\r\n    grid-row: 1 / 4;\r\n    grid-template-rows: 1fr;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 30px;\r\n    padding: 20px 40px;\r\n    \r\n}\r\n\r\n#main-header > h2 {\r\n    color: var(--primary-color);\r\n}\r\n\r\n#main-body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 5px;\r\n    width: 80%;\r\n}\r\n\r\n#main-body > .task {\r\n    width: 100%;\r\n    \r\n}\r\n\r\n#project-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n}\r\n\r\n.addtask-btn  {\r\n    background-color: white;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    gap: 15px;\r\n    border-radius: 5px;\r\n    padding: 10px 18px;\r\n}\r\n\r\n.addproject-btn {\r\n    background-color: var(--primary-color);\r\n    color: var(--secondary-color);\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n}\r\n\r\n.addproject-btn > p {\r\n    font-size: 16px;\r\n}\r\n\r\n.addtask-btn:hover , .task-holder:hover , .task-holder:hover > * {\r\n    background-color: var(--lighthover-color);\r\n    cursor: pointer;\r\n}\r\n\r\n.addtask-btn > img , .addproject-btn > img {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n.addproject-popup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.project-addcancel-btns {\r\n    display: flex;\r\n    gap: 15px;\r\n}\r\n\r\ninput {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #395979;\r\n    \r\n}\r\n\r\n.addproject-popup > input:focus {\r\n    outline: none;\r\n}\r\n\r\n.project-add-btn , .project-cancel-btn {\r\n    width: 100%;\r\n    font-weight: bold;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.project-add-btn {\r\n    background-color: var(--add-color);\r\n    border: none;\r\n}\r\n\r\n.project-cancel-btn {\r\n    background-color: var(--cancel-color);\r\n    border: 1px solid var(--cancel-border);\r\n}\r\n\r\n.project-name {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n}\r\n\r\n\r\n\r\n#task-container {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    \r\n    \r\n\r\n}\r\n\r\n\r\n\r\n.task-holder {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 18px;\r\n    box-sizing: border-box;\r\n    border-radius: 5px;\r\n    \r\n}\r\n\r\n.task {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    font-weight: bold;\r\n}\r\n\r\n.task-button-holder {\r\n    display: flex;\r\n    width: 100%;\r\n    \r\n    \r\n}\r\n\r\n\r\n\r\n.delete-button {\r\n    background-color: var(--primary-color);\r\n    border: none;\r\n    display: none;\r\n}\r\n\r\n\r\n\r\n.inactive {\r\n    display: none;\r\n    \r\n}\r\n\r\n.active , .active > * {\r\n    background-color: var(--darkhover-color);\r\n}\r\n\r\n.side-image:hover > .delete-button , .task-holder:hover > .delete-button {\r\n    display: inline-block;\r\n}\r\n\r\n"],sourceRoot:""}]);const A=d},312:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(d[c]=!0)}for(var i=0;i<e.length;i++){var l=[].concat(e[i]);r&&d[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},648:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},596:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},d=[],A=0;A<e.length;A++){var c=e[A],i=r.base?c[0]+r.base:c[0],l=o[i]||0,s="".concat(i," ").concat(l);o[i]=l+1;var p=t(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var g=a(u,r);r.byIndex=A,n.splice(A,0,{identifier:s,updater:g,references:1})}d.push(s)}return d}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var d=0;d<o.length;d++){var A=t(o[d]);n[A].references--}for(var c=r(e,a),i=0;i<o.length;i++){var l=t(o[i]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=c}}},176:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},808:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},120:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},520:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},936:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(596),n=t.n(e),r=t(520),a=t.n(r),o=t(176),d=t.n(o),A=t(120),c=t.n(A),i=t(808),l=t.n(i),s=t(936),p=t.n(s),u=t(904),g={};function m(){let e=new Map;return{getProjects:()=>e,addProject:n=>{e.has(n.getName())?alert("Please choose a unique project name"):n.getName().length<1?alert("Please choose a name for your project"):e.set(n.getName(),n)},deleteProject:n=>{e.delete(n.getName())}}}function C(e){let n=e,t=new Map;return{getName:()=>n,setName:e=>{n=e},getTasks:()=>t,addTask:e=>{e.getName().length<1?alert("Please choose a name for your task"):t.has(e.getName())?alert("Please choose a unique name for your task"):t.set(e.getName(),e)},sortTasks:()=>{let e=[],n=t.length;if(0!=n&&1!=n){e.push(t[0]);for(let r=1;r<n;r++)for(let n=0;n<=e.length;n++){if(n==e.length){e.push(t[r]);break}if(t[r].getDate()<=e[n].getDate()){e.splice(n,0,t[r]);break}}t=e}}}}function f(){let e=document.createElement("button");return e.classList.add("delete-button"),e.innerHTML="<img src='../images/x.png' alt='Picture of a green X'>",e}g.styleTagTransform=p(),g.setAttributes=c(),g.insert=d().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=l(),n()(u.c,g),u.c&&u.c.locals&&u.c.locals;let h=function(){const e=document.querySelector("#main-header"),n=function(){let e=C("General"),n=document.querySelector("#General"),t=C("Today"),r=C("Weekly"),a=e,o=n,d=(e.getName(),"false"),A="false",c=m();c.addProject(e),c.addProject(t),c.addProject(r);let i=m();return{getActiveProject:()=>a,getActiveProjectElement:()=>o,isAddProjectActive:()=>d,isAddTaskActive:()=>A,getStaticProjects:()=>c,getDynamicProjects:()=>i,setActiveProject:e=>{a=e},setActiveProjectElement:e=>{o=e},setAddProjectActive:e=>{d=e},setAddTaskActive:e=>{A=e}}}(),t=(n.getDynamicProjects(),function(){let e=document.createElement("button");return e.classList.add("addproject-btn"),e.dataset.state="true",e.innerHTML="<img src='../images/plusgreen.png' alt='Picture of a green plus sign' data-state='true'> <p data-state='true'>Add Project</p>",e}()),r=function(){let e=document.createElement("div");e.classList.add("addproject-popup");let n=document.createElement("input");n.type="text",n.name="ProjectName",n.id="project_name",n.value="",n.setAttribute("maxlength","20");let t=document.createElement("div");t.classList.add("project-addcancel-btns");let r=document.createElement("button");r.type="button",r.classList.add("project-add-btn"),r.dataset.state="false",r.textContent="Add";let a=document.createElement("button");return a.type="button",a.classList.add("project-cancel-btn"),a.dataset.state="false",a.textContent="Cancel",t.appendChild(r),t.appendChild(a),e.appendChild(n),e.appendChild(t),e}(),a=function(){let e=document.createElement("button");return e.classList.add("addtask-btn"),e.dataset.state="true",e.innerHTML="<img src='../images/plusblue.png' alt='Picture of a blue plus sign' data-state='true'> <p data-state='true'>Add Task</p>",e}(),o=function(){let e=document.createElement("div");e.classList.add("addproject-popup");let n=document.createElement("input");n.type="text",n.name="TaskName",n.id="task_name",n.value="",n.setAttribute("maxlength","45");let t=document.createElement("div");t.classList.add("project-addcancel-btns");let r=document.createElement("button");r.type="button",r.classList.add("project-add-btn"),r.dataset.state="false",r.textContent="Add";let a=document.createElement("button");return a.type="button",a.classList.add("project-cancel-btn"),a.dataset.state="false",a.textContent="Cancel",t.appendChild(r),t.appendChild(a),e.appendChild(n),e.appendChild(t),e}(),d=document.querySelector("#General"),A=document.querySelector("#Today"),c=document.querySelector("#Weekly");d.addEventListener("click",u),A.addEventListener("click",u),c.addEventListener("click",u),t.addEventListener("click",s),r.querySelector(".project-add-btn").addEventListener("click",(function(e){let t=e.target.dataset.state;n.setAddProjectActive(t);let r=C(document.querySelector("#project_name").value);n.getDynamicProjects().addProject(r),l(),i()})),r.querySelector(".project-cancel-btn").addEventListener("click",s),a.addEventListener("click",p),o.querySelector(".project-add-btn").addEventListener("click",(function(e){let t=e.target.dataset.state;n.setAddTaskActive(t);let r=function(e){let n=document.querySelector("#task_name").value,t=new Date;return{getName:()=>n,getDate:()=>t,setName:e=>{n=e},setDate:e=>{t=e}}}(),a=n.getActiveProject();a.addTask(r);let o=n.getStaticProjects(),d=n.getDynamicProjects();o.getProjects().has(a.getName())?(o.getProjects().set(a.getName(),a),n.setActiveProject(a)):(d.getProjects().set(a.getName(),a),n.setActiveProject(a)),l(),i()})),o.querySelector(".project-cancel-btn").addEventListener("click",p),console.log(n.getActiveProject().getName());const i=()=>{let t=document.querySelector("#main-header"),r=(document.querySelector("#main-body"),document.querySelector("#task-container")),d=document.querySelector(".task-button-holder"),A=n.getActiveProject();for(;t.firstChild;)t.removeChild(t.firstChild);for(;r.firstChild;)r.removeChild(r.firstChild);for(;d.firstChild;)d.removeChild(d.firstChild);if(A){let n=document.createElement("h2");n.textContent=A.getName(),e.appendChild(n);for(const[e,n]of A.getTasks().entries()){let n=document.createElement("div");n.classList.add("task-holder");let t=f();t.dataset.value=`${e}`,t.querySelector("img").dataset.value=`${e}`,t.querySelector("img").src="../images/x-black.png",t.querySelector("img").alt="Picture of a black X",t.addEventListener("click",h);let a=document.createElement("div");a.classList.add("task"),a.textContent=e,n.appendChild(a),n.appendChild(t),r.appendChild(n)}}n.getActiveProject()&&("false"===n.isAddTaskActive()?d.appendChild(a):(d.appendChild(o),document.querySelector("#task_name").value=""))},l=()=>{let e=n.getActiveProject(),a=n.getStaticProjects().getProjects(),o=n.getDynamicProjects().getProjects(),d=document.querySelector("#project-container"),A=document.querySelector(".project-button-holder");for(;d.firstChild;)d.removeChild(d.firstChild);for(;A.firstChild;)A.removeChild(A.firstChild);if(e)for(const[t,r]of a.entries())if(e.getName()===t){n.getActiveProjectElement().classList.remove("active");let e=document.querySelector(`#${t}`);e.classList.add("active"),n.setActiveProjectElement(e)}for(const[t,r]of o.entries()){let r=document.createElement("button");r.classList.add("side-image"),r.dataset.value=t,r.id=`${t}`,r.addEventListener("click",u);let a=document.createElement("div");a.classList.add("project-name-container");let o=document.createElement("img");o.src="../images/checklist.png",o.alt="Picture of a green clipboard containing a green checklist",o.dataset.value=`${t}`;let A=document.createElement("p");A.textContent=`${t}`,A.dataset.value=`${t}`;let c=f();if(c.dataset.value=`${t}`,c.querySelector("img").dataset.value=`${t}`,c.addEventListener("click",g),a.appendChild(o),a.appendChild(A),r.appendChild(a),r.appendChild(c),d.appendChild(r),n.getActiveProject()&&e.getName()===t){n.getActiveProjectElement().classList.remove("active");let e=document.getElementById(t);e.classList.add("active"),n.setActiveProjectElement(e)}}"false"===n.isAddProjectActive()?A.appendChild(t):(A.appendChild(r),document.querySelector("#project_name").value="")};function s(e){let t=e.target.dataset.state;n.setAddTaskActive("false"),n.setAddProjectActive(t),l(),i()}function p(e){let t=e.target.dataset.state;n.setAddProjectActive("false"),n.setAddTaskActive(t),l(),i()}function u(e){let t=n.getStaticProjects().getProjects(),r=n.getDynamicProjects().getProjects();t.has(e.target.dataset.value)?(n.setActiveProject(t.get(e.target.dataset.value)),console.log(n.getActiveProject().getName())):(n.setActiveProject(r.get(e.target.dataset.value)),console.log(n.getActiveProject().getName())),n.setAddTaskActive("false"),n.setAddProjectActive("false"),l(),i()}function g(e){e.stopPropagation();let t=e.target.dataset.value;n.getDynamicProjects().getProjects().delete(t),n.getActiveProject()&&n.getActiveProject().getName()===t&&n.setActiveProject(void 0),l(),i()}function h(e){e.stopPropagation();let t=e.target.dataset.value;n.getActiveProject().getTasks().delete(t),i()}return{updateMainScreen:i,updateSidebar:l}}();h.updateMainScreen(),h.updateSidebar()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,