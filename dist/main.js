(()=>{"use strict";var n={904:(n,r,e)=>{e.d(r,{c:()=>d});var t=e(648),o=e.n(t),a=e(312),A=e.n(a)()(o());A.push([n.id,":root {\n    --primary-color: #05386B;\n    --secondary-color: #5CDB95;\n    --add-color: #aaffaa;\n    --add-border: #99dd99;\n    --cancel-color: #ffbebe;\n    --cancel-border: #eeadad;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n    font-family: sans-serif;\n}\n\nh2 {\n    color: var(--secondary-color);\n    font-size: 1.7em;\n    \n}\n\n#page-container {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto 1fr;\n    height: 100%;\n    \n}\n\n#header {\n    grid-column: 1 / 3;\n    background-color: #5CDB95;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    padding: 25px;\n}\n\n#header > img {\n    height: 50px;\n    width: 50px;\n}\n\n#header > p {\n    font-size: 2em;\n    color: var(--primary-color);\n    font-weight: 600;\n}\n\n#content-container {\n    grid-column: 1 / 3;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: auto auto 1fr;\n    \n    \n}\n\n#sidebar-one , #sidebar-two {\n    grid-column: 1 / 2;\n    background-color: var(--primary-color);\n    padding: 15px 25px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px; \n     \n}\n\n#content-container > h2 {\n    background-color: var(--primary-color);\n    padding: 0 25px;\n    display: grid;\n}\n\n.side-image {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    \n}\n\n.side-image > img {\n    height: 20px;\n    width: 20px;\n}\n\n.side-image > p {\n    color: var(--secondary-color);\n    font-size: 16px;\n    \n}\n.side-image , .addproject-btn {\n    padding: 10px 18px;\n}\n#general , #today , #week {\n    background-color: var(--primary-color);\n    border: none;\n}\n\n#general:hover , #today:hover , #week:hover , .addproject-btn:hover {\n    border-radius: 5px;\n    background-color: #395979;\n    cursor: pointer;\n}\n\n#main-content {\n    grid-column: 2 / 3;\n    grid-row: 1 / 3;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n    \n}\n\n#main-header > h2 {\n    color: var(--primary-color);\n}\n\n#main-body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 5px;\n    width: 50%;\n}\n\n#main-body > .task {\n    width: 100%;\n    \n}\n\n#main-body > .task:hover {\n    background-color: blue;\n    \n}\n\n.addtask-btn  {\n    background-color: white;\n    border: none;\n    display: flex;\n    width: 100%;\n    gap: 10px;\n}\n\n.addproject-btn {\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n    border: none;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.addproject-btn > p {\n    font-size: 16px;\n}\n\n.addtask-btn:hover {\n    background-color: blue;\n}\n\n.addtask-btn > img , .addproject-btn > img {\n    height: 20px;\n    width: 20px;\n}\n\n.addproject-popup {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.project-addcancel-btns {\n    display: flex;\n    gap: 15px;\n}\n\ninput {\n    width: 100%;\n    padding: 10px;\n    border-radius: 5px;\n    box-sizing: border-box;\n    border: 1px solid #395979;\n    \n}\n\n.addproject-popup > input:focus {\n    outline: none;\n}\n\n.project-add-btn , .project-cancel-btn {\n    width: 100%;\n    font-weight: bold;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n\n}\n\n.project-add-btn {\n    background-color: var(--add-color);\n    border: none;\n}\n\n.project-cancel-btn {\n    background-color: var(--cancel-color);\n    border: 1px solid var(--cancel-border);\n}\n\n.inactive {\n    display: none;\n    \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB,0BAA0B;IAC1B,oBAAoB;IACpB,qBAAqB;IACrB,uBAAuB;IACvB,wBAAwB;AAC5B;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,6BAA6B;IAC7B,gBAAgB;;AAEpB;;AAEA;IACI,aAAa;IACb,0BAA0B;IAC1B,4BAA4B;IAC5B,YAAY;;AAEhB;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,cAAc;IACd,2BAA2B;IAC3B,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,8BAA8B;IAC9B,iCAAiC;;;AAGrC;;AAEA;IACI,kBAAkB;IAClB,sCAAsC;IACtC,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,QAAQ;;AAEZ;;AAEA;IACI,sCAAsC;IACtC,eAAe;IACf,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;AAEb;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,6BAA6B;IAC7B,eAAe;;AAEnB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,sCAAsC;IACtC,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;;AAEZ;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;IACR,UAAU;AACd;;AAEA;IACI,WAAW;;AAEf;;AAEA;IACI,sBAAsB;;AAE1B;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,WAAW;IACX,SAAS;AACb;;AAEA;IACI,sCAAsC;IACtC,6BAA6B;IAC7B,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB,yBAAyB;;AAE7B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,eAAe;;AAEnB;;AAEA;IACI,kCAAkC;IAClC,YAAY;AAChB;;AAEA;IACI,qCAAqC;IACrC,sCAAsC;AAC1C;;AAEA;IACI,aAAa;;AAEjB",sourcesContent:[":root {\r\n    --primary-color: #05386B;\r\n    --secondary-color: #5CDB95;\r\n    --add-color: #aaffaa;\r\n    --add-border: #99dd99;\r\n    --cancel-color: #ffbebe;\r\n    --cancel-border: #eeadad;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-family: sans-serif;\r\n}\r\n\r\nh2 {\r\n    color: var(--secondary-color);\r\n    font-size: 1.7em;\r\n    \r\n}\r\n\r\n#page-container {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto 1fr;\r\n    height: 100%;\r\n    \r\n}\r\n\r\n#header {\r\n    grid-column: 1 / 3;\r\n    background-color: #5CDB95;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    padding: 25px;\r\n}\r\n\r\n#header > img {\r\n    height: 50px;\r\n    width: 50px;\r\n}\r\n\r\n#header > p {\r\n    font-size: 2em;\r\n    color: var(--primary-color);\r\n    font-weight: 600;\r\n}\r\n\r\n#content-container {\r\n    grid-column: 1 / 3;\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    grid-template-rows: auto auto 1fr;\r\n    \r\n    \r\n}\r\n\r\n#sidebar-one , #sidebar-two {\r\n    grid-column: 1 / 2;\r\n    background-color: var(--primary-color);\r\n    padding: 15px 25px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px; \r\n     \r\n}\r\n\r\n#content-container > h2 {\r\n    background-color: var(--primary-color);\r\n    padding: 0 25px;\r\n    display: grid;\r\n}\r\n\r\n.side-image {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    \r\n}\r\n\r\n.side-image > img {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n.side-image > p {\r\n    color: var(--secondary-color);\r\n    font-size: 16px;\r\n    \r\n}\r\n.side-image , .addproject-btn {\r\n    padding: 10px 18px;\r\n}\r\n#general , #today , #week {\r\n    background-color: var(--primary-color);\r\n    border: none;\r\n}\r\n\r\n#general:hover , #today:hover , #week:hover , .addproject-btn:hover {\r\n    border-radius: 5px;\r\n    background-color: #395979;\r\n    cursor: pointer;\r\n}\r\n\r\n#main-content {\r\n    grid-column: 2 / 3;\r\n    grid-row: 1 / 3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 5px;\r\n    \r\n}\r\n\r\n#main-header > h2 {\r\n    color: var(--primary-color);\r\n}\r\n\r\n#main-body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 5px;\r\n    width: 50%;\r\n}\r\n\r\n#main-body > .task {\r\n    width: 100%;\r\n    \r\n}\r\n\r\n#main-body > .task:hover {\r\n    background-color: blue;\r\n    \r\n}\r\n\r\n.addtask-btn  {\r\n    background-color: white;\r\n    border: none;\r\n    display: flex;\r\n    width: 100%;\r\n    gap: 10px;\r\n}\r\n\r\n.addproject-btn {\r\n    background-color: var(--primary-color);\r\n    color: var(--secondary-color);\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n\r\n.addproject-btn > p {\r\n    font-size: 16px;\r\n}\r\n\r\n.addtask-btn:hover {\r\n    background-color: blue;\r\n}\r\n\r\n.addtask-btn > img , .addproject-btn > img {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n.addproject-popup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\n.project-addcancel-btns {\r\n    display: flex;\r\n    gap: 15px;\r\n}\r\n\r\ninput {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #395979;\r\n    \r\n}\r\n\r\n.addproject-popup > input:focus {\r\n    outline: none;\r\n}\r\n\r\n.project-add-btn , .project-cancel-btn {\r\n    width: 100%;\r\n    font-weight: bold;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.project-add-btn {\r\n    background-color: var(--add-color);\r\n    border: none;\r\n}\r\n\r\n.project-cancel-btn {\r\n    background-color: var(--cancel-color);\r\n    border: 1px solid var(--cancel-border);\r\n}\r\n\r\n.inactive {\r\n    display: none;\r\n    \r\n}"],sourceRoot:""}]);const d=A},312:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(t)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(A[c]=!0)}for(var i=0;i<n.length;i++){var l=[].concat(n[i]);t&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},648:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},596:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},A=[],d=0;d<n.length;d++){var c=n[d],i=t.base?c[0]+t.base:c[0],l=a[i]||0,s="".concat(i," ").concat(l);a[i]=l+1;var p=e(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var g=o(u,t);t.byIndex=d,r.splice(d,0,{identifier:s,updater:g,references:1})}A.push(s)}return A}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var d=e(a[A]);r[d].references--}for(var c=t(n,o),i=0;i<a.length;i++){var l=e(a[i]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}a=c}}},176:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},808:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},120:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},936:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(596),r=e.n(n),t=e(520),o=e.n(t),a=e(176),A=e.n(a),d=e(120),c=e.n(d),i=e(808),l=e.n(i),s=e(936),p=e.n(s),u=e(904),g={};function m(){let n={};return{getProjects:()=>n,addProject:r=>{n[r.getName()]=r},deleteProject:r=>{delete n[r.getName()]}}}function C(n){let r=n,e=[];return{getName:()=>r,setName:n=>{r=n},getTasks:()=>e,addTask:n=>{e.push(n)},sortTasks:()=>{let n=[],r=e.length;if(0!=r&&1!=r){n.push(e[0]);for(let t=1;t<r;t++)for(let r=0;r<=n.length;r++){if(r==n.length){n.push(e[t]);break}if(e[t].getDate()<=n[r].getDate()){n.splice(r,0,e[t]);break}}e=n}}}}g.styleTagTransform=p(),g.setAttributes=c(),g.insert=A().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=l(),r()(u.c,g),u.c&&u.c.locals&&u.c.locals;let f=function(){const n=document.querySelector("#main-header"),r=function(){let n=C("General"),r=C("Today"),e=C("Weekly"),t=n,o=n.getName(),a="false",A=m();A.addProject(n),A.addProject(r),A.addProject(e);let d=m();return{getActiveProject:()=>t,getActiveSidebar:()=>o,isAddProjectActive:()=>a,getStaticProjects:()=>A,getDynamicProjects:()=>d,setActiveProject:n=>{t=n},setAddProjectActive:n=>{a=n}}}();r.getActiveSidebar(),r.getDynamicProjects();const e=function(){let n=document.createElement("button");return n.classList.add("addproject-btn"),n.dataset.state="true",n.innerHTML="<img src='../images/plusgreen.png' alt='Picture of a green plus sign' data-state='true'> <p data-state ='true'>Add Project</p>",n}(),t=function(){let n=document.createElement("div");n.classList.add("addproject-popup");let r=document.createElement("input");r.type="text",r.name="ProjectName",r.id="project_name",r.value="";let e=document.createElement("div");e.classList.add("project-addcancel-btns");let t=document.createElement("button");t.type="button",t.classList.add("project-add-btn"),t.dataset.state="false",t.textContent="Add";let o=document.createElement("button");return o.type="button",o.classList.add("project-cancel-btn"),o.dataset.state="false",o.textContent="Cancel",e.appendChild(t),e.appendChild(o),n.appendChild(r),n.appendChild(e),n}();e.addEventListener("click",a),t.querySelector(".project-add-btn").addEventListener("click",(function(n){let e=n.target.dataset.state;r.setAddProjectActive(e);let t=C(document.querySelector("#project_name").value);r.getDynamicProjects().addProject(t),o()})),t.querySelector(".project-cancel-btn").addEventListener("click",a),document.querySelector(".addproject-btn"),document.querySelector(".addproject-popup"),document.querySelector(".project-add-btn"),document.querySelector(".project-cancel-btn");const o=()=>{let n=r.getDynamicProjects().getProjects(),o=document.querySelector("#sidebar-two");for(;o.firstChild;)o.removeChild(o.firstChild);for(const r in n){let n=document.createElement("button");n.classList.add("side-image"),n.innerHTML="<img src='../images/checklist.png' alt='Picture of a green clipboard containing a green checklist'> <p>Name</p>",o.appendChild(n)}"false"===r.isAddProjectActive()?o.appendChild(e):(o.appendChild(t),document.querySelector("#project_name").value="")};function a(n){let e=n.target.dataset.state;r.setAddProjectActive(e),o()}return{updateMainScreen:()=>{let e=document.querySelector("#main-body"),t=r.getActiveProject();for(;e.firstChild;)e.removeChild(e.firstChild);let o=document.createElement("h2");o.textContent=t.getName(),n.appendChild(o);for(const n of t.getTasks()){let r=document.createElement("div");r.classList.add("task"),r.textContent=n.getName(),e.appendChild(r)}let a=function(){let n=document.createElement("button");return n.classList.add("addtask-btn"),n.innerHTML="<img src='../images/plusblue.png' alt='Picture of a blue plus sign'> <p>Add Task</p>",n}();a.style.fontSize="16px",e.appendChild(a)},updateSidebar:o}}();f.updateMainScreen(),f.updateSidebar()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,